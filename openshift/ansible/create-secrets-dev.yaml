---
- name: Create all Secrets required by Tiuha app
  hosts: localhost
  gather_facts: false
  collections: 
    - keepersecurity.keeper_secrets_manager
    - kubernetes.core
  vars:
    openshiftNamespace: "simo-tiuha"
    server: "api.ock.fmi.fi:6443"
    serverName: "api-ock-fmi-fi:6443"
  vars_files:
    - tiuha-vault
  tasks:
    - name: Get AWS_ACCESS_KEY_ID
      keeper_get:
        uid: "-gD_e7EpWwSeO06jVwW7LA"
        field: Password
      register: AWS_ACCESS_KEY_ID

    - name: Get AWS_SECRET_ACCESS_KEY
      keeper_get:
        uid: "ByzM66Xt2lcFAALPBxL7cw"
        field: Password
      register: AWS_SECRET_ACCESS_KEY

    - name: Get DATABASE_HOST
      keeper_get:
        uid: "ntytxFY--GSkNUyM65lPBg"
        field: Password
      register: DATABASE_HOST

    - name: Get DATABASE_NAME
      keeper_get:
        uid: "pcuQt69fZLw76qDce0pF7A"
        field: Password
      register: DATABASE_NAME

    - name: Get DATABASE_PASSWORD
      keeper_get:
        uid: "ZEX1XmmeMnCmgh5RM3BVJw"
        field: Password
      register: DATABASE_PASSWORD

    - name: Get DATABASE_PORT
      keeper_get:
        uid: "3Ls_e1daiYy4nCkQHXYGMg"
        field: Password
      register: DATABASE_PORT

    - name: Get DATABASE_USERNAME
      keeper_get:
        uid: "IeD7AKz-OPCjsVly25UanA"
        field: Password
      register: DATABASE_USERNAME

    - name: Get ENV
      keeper_get:
        uid: "RDuaKBuhvPrZoX7_817YUA"
        field: Password
      register: ENV

    - name: Get GEOMESA_DB_PASSWORD
      keeper_get:
        uid: "a0r_oy8JkUC_wYbb2Q20Dw"
        field: Password
      register: GEOMESA_DB_PASSWORD

    - name: Get IMPORT_BUCKET
      keeper_get:
        uid: "awKWXFJkLR_k0fqz6_LWFA"
        field: Password
      register: IMPORT_BUCKET

    - name: Get MEASUREMENTS_BUCKET
      keeper_get:
        uid: "ftOGpHTVc_sXexVnAaZdJA"
        field: Password
      register: MEASUREMENTS_BUCKET

    - name: Get tiuha_key
      keeper_get:
        uid: "iKDh3xfymLBd1_jmltiyeQ"
        custom_field: sshkey
      register: tiuha_key

    - name: Get pull_secret
      keeper_get:
        uid: "LB_BuHeJNdUkj6VaTxXI5w"
        custom_field: dockerconfigjson
      register: pull_secret

    - name: Get default service account token
      shell: oc sa get-token default -n "{{ openshiftNamespace }}"
      register: token

    - name: Create measurement-api-envs Secret
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: measurement-api-envs
            namespace: "{{ openshiftNamespace }}"
          data:
            IMPORT_BUCKET: "{{ IMPORT_BUCKET.value | b64encode }}"
            DATABASE_PORT: "{{ DATABASE_PORT.value | b64encode }}"
            DATABASE_HOST: "{{ DATABASE_HOST.value | b64encode }}"
            ENV: "{{ ENV.value | b64encode }}"
            DATABASE_NAME: "{{ DATABASE_NAME.value | b64encode }}"
            AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY.value | b64encode }}"
            MEASUREMENTS_BUCKET: "{{ MEASUREMENTS_BUCKET.value | b64encode }}"
            AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID.value | b64encode | b64encode }}"
            GEOMESA_DB_PASSWORD: "{{ GEOMESA_DB_PASSWORD.value | b64encode }}"
            DATABASE_USERNAME: "{{ DATABASE_USERNAME.value | b64encode }}"
            DATABASE_PASSWORD: "{{ DATABASE_PASSWORD.value | b64encode }}"
          type: Opaque
    
    - name: Create qc-creds Secret
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: qc-creds
            namespace: "{{ openshiftNamespace }}"
          data:
            AWS_SECRET_ACCESS_KEY: "{{ AWS_SECRET_ACCESS_KEY.value | b64encode }}"
            AWS_ACCESS_KEY_ID: "{{ AWS_ACCESS_KEY_ID.value | b64encode }}"
          type: Opaque

    - name: Template kubeconfig from variables
      template:
        src: templates/kubeconfig.j2
        dest: /tmp/kube.txt

    - name: Create kubeconfig Secret
      k8s:
        state: present
        definition:
          kind: Secret
          apiVersion: v1
          metadata:
            name: kubeconfig
            namespace: "{{ openshiftNamespace }}"
          data:
            kubeconfig: "{{ lookup('file','/tmp/kube.txt') | b64encode }}"
          type: Opaque

    - name: Create tiuha-openshift-image-builder Secret
      k8s:
        state: present
        definition:
          kind: Secret
          apiVersion: v1
          metadata:
            name: tiuha-openshift-image-builder
            namespace: "{{ openshiftNamespace }}"
          data:
            ssh-privatekey: "{{ tiuha_key.value | b64encode }}"
          type: kubernetes.io/ssh-auth

    - name: Create fmi-tiuha-pull-secret Secret
      k8s:
        state: present
        definition:
          kind: Secret
          apiVersion: v1
          metadata:
            name: fmi-tiuha-pull-secret
            namespace: "{{ openshiftNamespace }}"
          data:
            .dockerconfigjson: "{{ pull_secret.value | b64encode }}"
          type: kubernetes.io/dockerconfigjson
